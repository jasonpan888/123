{"pages":[],"posts":[{"title":"如何上传oj题","text":"摘要内容 如何上传oj题 作者: RE9T 目录 前言 实际操作 关于如何上传oj题目，我这里做一个小总结 前提 看什么前提？？？，前提不是你是oj管理员吗？ 实际操作 首先进入OJ的后台管理页面。然后选择问题部分的增加题目 然后剩下的部分自己填完，一直到测试类型部分在输入样例的上方有一个tag，请将它改为自己的代号或者名字，方便查看 这部分很重要，因为测试输入输出文件需要自行编写，测试数据很重要，本片重点就是如何编写测试输入输出文件。 .in文件为测试输入文件，注意：请按照顺序写，比如果只有1个输入文件，文件名为1.in,多个文件则按顺序2.in,3.in .out文件为测试输出文件，编写规则与上同。 最后将其放在一起，进行压缩。注意，压缩只能压缩纯粹的in，out文件然后点击下面的部分上传压缩文件就ok了 具体可以参考oj文档","link":"/2019/05/11/如何上传oj题/"},{"title":"如何配置github项目密匙","text":"摘要内容 如何配置github项目密匙 作者: RE9T 目录 前言 具体操作 添加公匙 前言 在此之前需要先要拥有一个自己的GitHub账号;以及已经安装了git工具 具体操作 首先找到自己的./ssh文件（有些可能找不到那也也是正常的，因为.ssh文件并不是初始化系统必虚的，该目录用于保存生成过的密匙匙，随便找个地方打开git bash，执行下面操作也有效） 右击.ssh文件夹打开git bash窗口，在打开的git bash窗口里，输入下面信息 1$ ssh-keygen -t rsa -C \"youemail\" 解释一下，youemail需要换成自己的注册GitHub账号的邮箱;然后在第一个提示句输入自己的github用户名_rsa ;(可以换成其他的，这个用户名以后就是你的登陆句柄 ) 这个时候.ssh文件就已经建立了，在c盘的用户下面可以找到它，然后在这个文件里面打开git bash窗口（已经到打开过了可以跳过） 然后继续在窗口内输入（一定要检查路径是不是在.ssh下，不然会很麻烦，ps-不堪回首）然后输入下面这句 1$ touch coufig 然后打开coufig文件输入以下内容，注意不要在语句前加缩进和空格（ps-不堪回首）下面的one用于代替我的用户名 123456# oneHost one.github.comHostName github.comPreferredAuthentications publickeyIdentityFile ~/.ssh/one_rsaUser one 注意不要改动 （详细参考博客) 前面弄完，并且已经保存后，执行下一步操作。 添加公匙 打开自己的github账号，并且在设置里面的ssh里面添加ssh，密匙名字随便写，内容就要在.ssh文件里面找到自己建立的–比如我的是one_rsa.pub，将里面的内容复制到上面就行 然后就是最后一步，测试 1$ssh -T git@one.github.com 注意，我上面的one仅是样例，可以更改，可以与多个github绑定，设置不同的句柄，每个新账号的添加步骤一致。 如果不知道.ssh路径在哪的 请参考大佬博客","link":"/2019/05/11/如何配置github项目密匙/"},{"title":"团队md标准样式","text":"摘要内容 如何恢复静态hexo 作者: RE9T 目录 如何将本地hexo备份上github 如何重新恢复本地博客 如何将本地hexo备份上github 前提：已经配置密匙且上传过hexo静态页面 1$ git clone \"远程仓库地址\" 先将远程仓库克隆到本地， 然后进入clone的目录，打开git bash 1$ git checkout -b hexo 创建并切换成hexo目录 然后将本地博客内的东西全部复制到该目录中 然后删除theme目录下的所有.git文件 1$ git add --all 该命令将所有文件加入缓存区 1$ git commit \"源代码\" 该命令将文件添加 自述内容1$ git push origin hexo 推送至远程仓库 如何重新恢复本地博客 前提：已下载git和nodejs 和绑定密匙 先找一个文件用来准备存放需要克隆的文件 在该目录下打开git bash界面 1$ git clone -b hexo \"远程仓库地址\" 然后打开该文件，输入 1npm install hexo --save 然后就完成了，接下来操作与正常hexo上传相似，建议以后每次操作为（前提是如果在本地预览后没有问题，）。 12345$ git pull$ hexo d -g$ git add -all$ git commit -m \"代码自述\"$ git push -u origin hexo","link":"/2019/05/11/如何恢复静态hexo/"},{"title":"团队md标准样式","text":"摘要文章主要内容 内容: 标准定制文件 作者: iht 目录 前言 团队内文件交流文件。 文件上传流程 OJ管理文件 团队日志记录 前言IHT团队管理必须文件上传名字命名的规范性，文件使用的通用性，以保证大家的协调工作，所有标准化规范必须严格遵循。望各位成员悉知。 团队内文件交流文件IHT 团队内部用来传播的文件，全部都必须使用markdown语法的 .md 文件 文件上传流程首先查看自己的文档是否已经分类，或被要求交到什么文件夹下 如果已要求上交的文件夹，请务必遵循 如果没有，请自行建立文件夹进行分类，再上传 文件夹命名规则123年-月-日-文件夹名eg: 2019-4-23-IHT团队核心文件 个人文件命名规则123年-月-日-时-分-名字-文件名eg: 2019-4-23-15-44-李超-规范文件 OJ管理文件OJ上传题目 tag标签必须加个人代号（或者名字就行，能证明是你就好） OJ题目改动 确定改动原因 确认无误后上传 团队日志记录","link":"/2019/04/23/标准文档/"},{"title":"团队md标准样式","text":"摘要内容 例如:关于团队md的标准样式 作者: IHT BLOG TEAM（自行更改） 目录 tags标签分类 更多….. tags标签分类 Team_template 团队模板类 Technology 技术文档类 Competition_information 比赛资料介绍类 额外部分12&lt;!-- more --&gt;以下部分为主要内容，内容格式自主选择。但more前面格式必须统一","link":"/2019/05/11/标准样式/"}],"tags":[{"name":"Technology","slug":"Technology","link":"/tags/Technology/"},{"name":"Team_template","slug":"Team-template","link":"/tags/Team-template/"}],"categories":[]}